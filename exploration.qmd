---
title: "Titre de votre page d'exploration"
title-block-banner: false
description: | 
  Petite description de cette page.
# à changer
date: "2022-12-21"
# Modifier les détails que vous voulez
author:
  - name: "Alfred Assal"
    # Votre site web perso ou github
    url: https://github.com/AlfredAssal/FAS1002_projet-final
    # les champs d'affiliation sont optionnels, vous pouvez les
    # comment out en ajoutant un # devant.
    affiliation: FAS1002
    affiliation-url: https://FAS1002.github.io/A22
    # changer pour votre propre orcid id
    # https://orcid.org/ pour vous inscrire.
    orcid: 0000-0002-5510-6473

# TRUE == Générer une citation pour cette page précise. Pour enlever, mettre false.
citation: true
# Inclure les références que vous utilisez dans vos rapports. Je conseille Zotero pour construire
# ce fichier ou de connecter RStudio directement pour pouvoir citer avec @nom-de-reference.
bibliography: references.bib
---

```{r}
library(tidyverse)
library(countrycode)
library(gsheet)
library(psych)
library(lubridate)

```

# Téléchargement des données

```{r}

# Téléchargement de énergie
currentDate <- Sys.Date()
csvFileName <- paste("data/raw/energie",currentDate,".csv",sep = "")
download.file("https://nyc3.digitaloceanspaces.com/owid-public/data/energy/owid-energy-data.csv",destfile = csvFileName)

# Téléchargement de gapminder
csvFileName2 <- paste("data/raw/gapminder",currentDate,".csv",sep = "")

url_gap <- "https://docs.google.com/spreadsheets/d/1RheSon1-q4vFc3AGyupVPH6ptEByE-VtnjOCselU0PE/edit#gid=176703676"

dat_gap <- read.csv(text=gsheet2text(url_gap, format='csv'), stringsAsFactors=FALSE)

write.csv(dat_gap,csvFileName2) 


```

# Données

```{r}

#Données sur l'energie
thedate <- Sys.Date()
thefileEN <- paste0("data/raw/energie",thedate,".csv")
dat_energie <- read.csv(thefileEN)



```

# Nettoyages des données

```{r}


# Combinaisons des deux bases de données

colnames(dat_gap)[2] <- "country"
colnames(dat_gap)[3] <- "year"

dat <- left_join(dat_gap, dat_energie)

# Transformations des données concernant les continants.
dat$continent <- countrycode(sourcevar = dat[, "geo"],
                             origin = "iso3c",
                             destination = "continent")

dat$continent <-
    ifelse(dat$iso_code == 'ATA', "Antartica" , dat$continent)
dat$continent <-
    ifelse(dat$iso_code == 'ANT', "Americas" , dat$continent)

dat$continent <- ifelse(dat$country == 'Asia', "Asia" , dat$continent)
dat$continent <-
    ifelse(str_detect(dat$country, "Africa"), "Africa" , dat$continent)
dat$continent <-
    ifelse(dat$country == 'Europe', "Europe" , dat$continent)

table(dat$continent, useNA = "always")
unique(dat$continent)

# Création des variables catégorielle pour les contients
dat$continentCat <- ifelse(dat$continent == "Africa", 1, dat$continent)

dat$continentCat <-
    ifelse(dat$continent == "Americas", 2, dat$continentCat)

dat$continentCat <-
    ifelse(dat$continent == "Antartica", 3, dat$continentCat)

dat$continentCat <- ifelse(dat$continent == "Asia", 4, dat$continentCat)

dat$continentCat <- ifelse(dat$continent == "Europe", 5, dat$continentCat)

dat$continentCat <- ifelse(dat$continent == "Oceania", 6, dat$continentCat)

# Création du premier tableau de statistiques descriptive
dat_production <- dat %>%
    subset(year>=2000,select = c(country,
                                 continent,
                                 energy_per_capita,
                                 coal_production,
                                 gas_production,
                                 oil_production,
                                 hydro_electricity,
                                 solar_electricity,
                                 wind_electricity,
                                 renewables_electricity,
                                 other_renewable_electricity))
 

dat_production<-dat_production[!is.na(dat_production$continent),]

tab1 <- dat_production %>%
  group_by(as.factor(continent)) %>%
   summarize(
       n=n(),
       Moyenne = mean(energy_per_capita,na.rm = TRUE),
       SD = sd(energy_per_capita,na.rm = TRUE),
       Min = min(energy_per_capita,na.rm = TRUE),
       Max = max(energy_per_capita,na.rm = TRUE)
       )

dat <- dat %>%
  mutate(quinqua = as.numeric(year) - as.numeric(year) %% 50)

tab2 <- dat %>%
    group_by(as.factor(quinqua)) %>% 
     summarize(
       n=n(),
       Moyenne = mean(Life.expectancy,na.rm = TRUE),
       SD = sd(Life.expectancy,na.rm = TRUE),
       Min = min(Life.expectancy,na.rm = TRUE),
       Max = max(Life.expectancy,na.rm = TRUE)
       )



```

## Statistiques descriptives

```{r}

# Consommation d'énergie par capita, regroupé par continent
tab1

tab2

```

```{r map}

library(leaflet)
leaflet() %>%
    setView(lng=150,
            lat=-30,
            zoom = 3) %>%
    addTiles() %>%
    addMarkers(lng=174.768,
               lat=-36.852,
               popup="Là où R est né") %>%
    addProviderTiles(providers$Esri.WorldGrayCanvas)
```

## Peut-être que ça vous inspirera!

```{r plotly, message=FALSE, warning=FALSE}

library(plotly)
library(gapminder)
df <- gapminder

fig <- df %>%
  plot_ly(
    x = ~ gdpPercap,
    y = ~ lifeExp,
    size = ~ pop,
    color = ~ continent,
    frame = ~ year,
    text = ~ country,
    hoverinfo = "text",
    type = 'scatter',
    mode = 'markers',
    width = "100%",
    height = 600
  )

fig <- fig %>% layout(xaxis = list(type = "log"))

fig <- fig %>%
  animation_button(
    x = 0, xanchor = "left", y = -0.15, yanchor = "bottom"
  )
fig
```

------------------------------------------------------------------------

À votre imagination de jouer!
